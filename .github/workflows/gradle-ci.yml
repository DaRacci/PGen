name: CI with Gradle

on:
  push:
    branches: [ main ]
    paths-ignore: [ "**.md" ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: termurin
          java-version: 17
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build

      - name: Extract Current Branch name
        shell: bash
        run: ref="${GITHUB_REF#refs/heads/}" && echo "::set-output name=branch::${ref////-}"
        id: ref

      - name: Upload build
        uses: actions/upload-artifact@v2.3.1
        with:
          name: build-artifacts-${{ steps.ref.outputs.branch }}
          path: build/libs

      - name: Get version from gradle
        if: steps.changes.outputs.platform == 'true'
        shell: bash
        id: extract_version
        run: |
          version=`./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}'`
          echo "::set-output name=version::$version"

      - name: Create GitHub Release
        if: steps.changes.outputs.platform == 'true'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.TOKEN }}"
          prerelease: false
          automatic_release_tag: v${{ steps.extract_version.outputs.version }}
          files: |
            build/libs/*.jar